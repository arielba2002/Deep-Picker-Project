version: '3.8'

services:
  frontend:
    build: ./app/frontend
    ports:
      - "3000:3000"
    volumes:
      - ./app/frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://backend.deep.svc.cluster.local:8888  # For browser access
      - CHOKIDAR_USEPOLLING=true  # For file watching in Docker
    depends_on:
      - backend
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  backend:
    build: ./app/backend
    ports:
      - "8888:8888"
    environment:
      - PORT=8888
      - HOST=0.0.0.0
      - FRONTEND_URL=http://frontend.deep.svc.cluster.local:3000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/mydb
    volumes:
      - ./app/backend:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
